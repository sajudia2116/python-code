 1. Create a list of 5 odd integers using random nos. Similarly create a list of 4 even integers using random nos. Replace the third element
 of odd integers with a list of 4 even integers. Flattern, sort and print the list. Provide appropriate message at each stage.
 import random
 odd_integers = [random.choice(range(1, 101, 2)) for _ in range(5)]
 print("List of 5 odd integers: ", odd_integers)
 even_integers = [random.choice(range(0, 101, 2)) for _ in range(4)]
 print("List of 4 even integers: ", even_integers)
 odd_integers[2] = even_integers
 print("Replaced the third element of odd integers with a list of 4 even integers: ", odd_integers)
 flattened_of_list = []
 for item in odd_integers:
 if isinstance(item, list):
 flattened_of_list.extend(item)
 else:
 flattened_of_list.append(item)
 print("Flattened list: ", flattened_of_list)
 sorted_list = sorted(flattened_of_list)
 print("Sorted list: ", sorted_list)
 List of 5 odd integers:  [91, 3, 69, 87, 71]
 List of 4 even integers:  [16, 36, 70, 58]
 Replaced the third element of odd integers with a list of 4 even integers:  [91, 3, [16, 36, 70, 58], 87, 71]
 Flattened list:  [91, 3, 16, 36, 70, 58, 87, 71]
 Sorted list:  [3, 16, 36, 58, 70, 71, 87, 91]


 2.) Generate 20 random integers and store them in a list. Accept a number from the user and print position of all occurrences of that number
 in the list.
 import random
 random_integers = [random.randint(1, 100) for _ in range(20)]
 print("List of 20 random integers:", random_integers)
 users_input = int(input("Enter a number to find its occurrences: "))
 positions = [index for index, value in enumerate(random_integers) if value == users_input]
 if positions:
 print(f"Number {users_input} found at positions: {positions}")
 else:
 print(f"Number {users_input} not found in the list.")
 List of 20 random integers: [96, 100, 30, 23, 98, 53, 65, 11, 40, 57, 65, 70, 89, 99, 43, 14, 30, 37, 20, 13]
 Enter a number to find its occurrences: 98
 Number 98 found at positions: [4]


 3.) Generate 50 random numbers in the range 1 and 30. Remove all duplicate values from the list.
 import random
 random_num = [random.randint(1, 30) for _ in range(50)]
 print("List of 50 random numbers:", random_num)
 unique_num = list(set(random_num))
 print("List after removing duplicates:", unique_num)
 List of 50 random numbers: [4, 18, 19, 12, 17, 14, 22, 10, 24, 16, 16, 18, 23, 21, 7, 15, 23, 22, 20, 23, 4, 27, 5, 20, 21, 23, 30, 
List after removing duplicates: [4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30]


 4.) Generate 30 random numbers and put them in a list. Create two more lists â€“ one containing only +ve numbers and another with â€“ve nos.
 import random
 random_num = [random.randint(-50, 50) for _ in range(30)]
 print("List of 30 random numbers:", random_num)
 positive_num = [num for num in random_num if num > 0]
 negative_num = [num for num in random_num if num < 0]
 print("List of positive numbers:", positive_num)
 print("List of negative numbers:", negative_num)
 List of 30 random numbers: [50, 44, 35, -12, 50, 13, 47, 5, 44, -43, -12, -28, -3, 31, 19, -49, -15, -32, 38, 36, 7, -11, -25, -19, 
List of positive numbers: [50, 44, 35, 50, 13, 47, 5, 44, 31, 19, 38, 36, 7, 34, 25, 6, 7, 50]
 List of negative numbers: [-12, -43, -12, -28, -3, -49, -15, -32, -11, -25, -19, -40]

 
 5.) A list contains 5 strings. Convert all these strings to uppercase.
 list_of_strings = ["hello", "world", "python", "programming", "rocks"]
 uppercase_strings = [string.upper() for string in list_of_strings]
 print("List of uppercase strings:", uppercase_strings)
List of uppercase strings: ['HELLO', 'WORLD', 'PYTHON', 'PROGRAMMING', 'ROCKS']


 6. Convert list of temperatures in Fahrenheit degrees to equivalent Celsius degrees.
 fahrenheit_temp = [32, 68, 104, 50, 77]
 celsius_temp = [(temp - 32) * 5/9 for temp in fahrenheit_temp]
 print("List of temperatures in Celsius:", celsius_temp)
 List of temperatures in Celsius: [0.0, 20.0, 40.0, 10.0, 25.0]


 7. Write a menu-driven program to implement the stack data structure.
 stacks = []
 def push(item):
    stacks.append(item)
    print(f"Item {item} pushed onto stacks.")
 def pop():
    if stacks:
        item = stacks.pop()
        print(f"Item {item} popped from stacks.")
        return item
    else:
        print("Stack is empty. Cannot pop item.")
        return None
 def display():
    print("Stack contents:", stacks)
 while True:
    print("\nMenu:")
    print("1. Push")
    print("2. Pop")
    print("3. Display stacks")
    print("4. Exit")
    choice = input("Enter your choice (1-4): ")
    if choice == '1':
        item = input("Enter the item to push: ")
        push(item)
    elif choice == '2':
        pop()
    elif choice == '3':
        display()
    elif choice == '4':
        print("Exiting program.")
        break
    else:
        print("Invalid choice. Please enter a number between 1 and 4.")
 Menu:
 1. Push
 2. Pop
 3. Display stacks
 4. Exit
 Enter your choice (1-4): 4
 Exiting program.


 8. Write a menu-driven program to implement the Queue data structure.
 queue = []
 def enqueue(item):
    queue.append(item)
    print(f"Item {item} added to the queue.")
 def dequeue():
    if queue:
        item = queue.pop(0)
        print(f"Item {item} removed from the queue.")
        return item
 else:
        print("Queue is empty. Cannot dequeue item.")
        return None
 def display():
    print("Queue contents:", queue)
 while True:
    print("\nMenu:")
    print("1. Enqueue")
    print("2. Dequeue")
    print("3. Display queue")
    print("4. Exit")
    choice = input("Enter your choice (1-4): ")
    if choice == '1':
        item = input("Enter the item to enqueue: ")
        enqueue(item)
    elif choice == '2':
        dequeue()
    elif choice == '3':
        display()
    elif choice == '4':
        print("Exiting program.")
        break
    else:
        print("Invalid choice. Please enter a number between 1 and 4.")
 Menu:
 1. Enqueue
 2. Dequeue
 3. Display queue
 4. Exit
 Enter your choice (1-4): 1
 Enter the item to enqueue: 2
 Item 2 added to the queue.
 Menu:
 1. Enqueue
 2. Dequeue
 3. Display queue
 4. Exit
 Enter your choice (1-4): 4
 Exiting program.


 9. Take two lists of numbers. Create third list of numbers for only those numbers from first list which are not there in 2 nd list (use list
 comprehension).
 list1 = [98, 97, 86, 76, 80, 48, 56, 66, 82]
 list2 = [66, 56, 82, 46, 48]
 list3 = [num for num in list1 if num not in list2]
 print("First list:", list1)
 print("Second list:", list2)
 print("Third list (numbers in first list not in second list):", list3)
 First list: [98, 97, 86, 76, 80, 48, 56, 66, 82]
 Second list: [66, 56, 82, 46, 48]
 Third list (numbers in first list not in second list): [98, 97, 86, 76, 80]
